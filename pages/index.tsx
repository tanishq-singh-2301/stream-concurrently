import Head from 'next/head';
import type { NextPage } from 'next';
import { useState } from 'react';
import { useRouter } from 'next/router';
import Header from '../components/Header';
import Footer from '../components/Footer';
import { v4 as uuidV4 } from 'uuid';

const Home: NextPage = () => {
  const [method, setMethod] = useState<{ action: 'url' | 'code' }>({ action: 'url' });
  const [url, setUrl] = useState<string>('');
  const [code, setCode] = useState<string>('');
  const router = useRouter();

  const create_group = () => {
    router.push({
      pathname: '/watch',
      query: {
        link: url,
        uuid: uuidV4()
      }
    })
  };

  const enter_group = async () => {
    if (code.length < 7) alert('Group code not valid.');

    await fetch(process.env.NEXT_PUBLIC_API_ENDPOINT, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: 'groups_exists',
        uuid: code
      })
    })
      .then(res => res.json())
      .then(res => {
        const data = JSON.parse(res.body).data.Item;
        if (data) {
          router.push({
            pathname: '/watch',
            query: {
              uuid: data['room-id'],
              link: data.link
            }
          });
        } else {
          alert("Group dosen't exist.")
        }
      })
  };

  const uuid = (set: number): string => {
    var id = '';
    for (var i = 0; i < (set * 4); i++) {
      if ((i % 4 === 0) && (i !== 0) && (i !== set * 4)) id += '-';

      id += Math.floor(Math.random() * 10).toString();
    };

    return id.toLowerCase();
  };

  return (
    <main className='h-screen w-screen flex justify-between items-center flex-col bg-teal-500'>
      <Head>
        <title>Stream Concurrently</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      {/* <section className='h-5/6 w-screen z-10 flex justify-center items-center'>
        {
          method.action === 'url' ?
            <section className='h-full w-full z-10 flex justify-center items-center flex-col'>
              <input type="text" value={url} onChange={e => setUrl(e.target.value)} className='h-15 w-96 outline-none border-slate-500 text-2xl font-bold border-2 rounded-sm p-3 bg-transparent placeholder:text-slate-500 mb-7' placeholder='Enter video url.' />
              <button type="submit" className='h-15 w-96 p-3 mb-3 text-2xl outline-none border-neutral-800 text-slate-200 font-bold hover:text-slate-200 bg-neutral-800 border-2' onClick={create_group}>CREATE GROUP</button>
              <span className='text-xl font-extrabold tracking-wider cursor-pointer hover:text-neutral-700' onClick={() => setMethod({ action: method.action === 'code' ? 'url' : 'code' })}>already have a code?&ensp;ENTER CODE</span>
            </section> :
            <section className='h-full w-full z-10 flex justify-center items-center flex-col'>
              <input type="text" value={code} onChange={e => setCode(e.target.value.toLowerCase())} className='h-15 w-96 outline-none border-slate-500 text-2xl font-bold border-2 rounded-sm p-3 bg-transparent placeholder:text-slate-500 mb-7' placeholder='Enter code.' />
              <button type="submit" className='h-15 w-96 p-3 mb-3 text-2xl outline-none border-neutral-800 text-slate-200 font-bold hover:text-slate-200 bg-neutral-800 border-2' onClick={enter_group}>ENTER GROUP</button>
              <span className='text-xl font-extrabold tracking-wider cursor-pointer hover:text-neutral-700' onClick={() => setMethod({ action: method.action === 'code' ? 'url' : 'code' })}>don't have a code?&ensp;CREATE GROUP</span>
            </section>
        }
      </section> */}
      <Footer />
    </main>
  );
};

export default Home;